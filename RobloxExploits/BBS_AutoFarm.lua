-- Made by iamtryingtofindname

local plrs = game:GetService("Players")
local stepped = game:GetService("RunService").RenderStepped

local plr = plrs.LocalPlayer

-- Instances:

local AutoFarm = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local Frame_2 = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local on = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Frame_3 = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local TextLabel = Instance.new("TextLabel")
local off = Instance.new("Frame")
local UICorner_5 = Instance.new("UICorner")
local Frame_4 = Instance.new("Frame")
local UICorner_6 = Instance.new("UICorner")
local TextLabel_2 = Instance.new("TextLabel")
local button = Instance.new("TextButton")
local TextLabel_3 = Instance.new("TextLabel")
local TextLabel_4 = Instance.new("TextLabel")

--Properties:

AutoFarm.Name = "AutoFarm"
AutoFarm.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
AutoFarm.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
AutoFarm.ResetOnSpawn = false

Frame.Parent = AutoFarm
Frame.BackgroundColor3 = Color3.fromRGB(0, 105, 157)
Frame.BorderColor3 = Color3.fromRGB(0, 170, 255)
Frame.Draggable = true
Frame.Position = UDim2.new(0.800000012, -1196, 0.0199999996, 505)
Frame.Selectable = true
Frame.Size = UDim2.new(0, 280, 0, 35)

UICorner.CornerRadius = UDim.new(0.150000006, 0)
UICorner.Parent = Frame

Frame_2.Parent = Frame
Frame_2.AnchorPoint = Vector2.new(0.5, 0.5)
Frame_2.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
Frame_2.BorderColor3 = Color3.fromRGB(0, 170, 255)
Frame_2.Position = UDim2.new(0.5, 0, 0.5, 0)
Frame_2.Size = UDim2.new(1, -4, 1, -4)

UICorner_2.CornerRadius = UDim.new(0.150000006, 0)
UICorner_2.Parent = Frame_2

on.Name = "on"
on.Parent = Frame_2
on.AnchorPoint = Vector2.new(0.5, 0.5)
on.BackgroundColor3 = Color3.fromRGB(0, 112, 0)
on.Position = UDim2.new(0.879999995, 0, 0.5, 0)
on.Size = UDim2.new(0.208353058, 0, 0.800000012, 0)
on.Visible = false

UICorner_3.CornerRadius = UDim.new(0.300000012, 0)
UICorner_3.Parent = on

Frame_3.Parent = on
Frame_3.AnchorPoint = Vector2.new(0.5, 0.5)
Frame_3.BackgroundColor3 = Color3.fromRGB(85, 255, 0)
Frame_3.Position = UDim2.new(0.5, 0, 0.5, 0)
Frame_3.Size = UDim2.new(1, -4, 1, -4)

UICorner_4.CornerRadius = UDim.new(0.300000012, 0)
UICorner_4.Parent = Frame_3

TextLabel.Parent = Frame_3
TextLabel.AnchorPoint = Vector2.new(0.5, 0.5)
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
TextLabel.Size = UDim2.new(1, 0, 1, 0)
TextLabel.Font = Enum.Font.SourceSansBold
TextLabel.Text = "ON"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextScaled = true
TextLabel.TextStrokeTransparency = 0.000
TextLabel.TextWrapped = true

off.Name = "off"
off.Parent = Frame_2
off.AnchorPoint = Vector2.new(0.5, 0.5)
off.BackgroundColor3 = Color3.fromRGB(170, 0, 0)
off.Position = UDim2.new(0.879999995, 0, 0.5, 0)
off.Size = UDim2.new(0.208353058, 0, 0.800000012, 0)

UICorner_5.CornerRadius = UDim.new(0.300000012, 0)
UICorner_5.Parent = off

Frame_4.Parent = off
Frame_4.AnchorPoint = Vector2.new(0.5, 0.5)
Frame_4.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
Frame_4.Position = UDim2.new(0.5, 0, 0.5, 0)
Frame_4.Size = UDim2.new(1, -4, 1, -4)

UICorner_6.CornerRadius = UDim.new(0.300000012, 0)
UICorner_6.Parent = Frame_4

TextLabel_2.Parent = Frame_4
TextLabel_2.AnchorPoint = Vector2.new(0.5, 0.5)
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.Position = UDim2.new(0.5, 0, 0.5, 0)
TextLabel_2.Size = UDim2.new(1, 0, 1, 0)
TextLabel_2.Font = Enum.Font.SourceSansBold
TextLabel_2.Text = "OFF"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextStrokeTransparency = 0.000
TextLabel_2.TextWrapped = true

button.Name = "button"
button.Parent = Frame_2
button.AnchorPoint = Vector2.new(0.5, 0.5)
button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
button.BackgroundTransparency = 1.000
button.Position = UDim2.new(0.879999995, 0, 0.5, 0)
button.Size = UDim2.new(0.208353058, 0, 0.800000012, 0)
button.Text = ""

TextLabel_3.Parent = Frame_2
TextLabel_3.AnchorPoint = Vector2.new(0, 0.5)
TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_3.BackgroundTransparency = 1.000
TextLabel_3.Position = UDim2.new(0, 0, 0.5, 1)
TextLabel_3.Size = UDim2.new(0.776000023, 0, 0.800000012, 0)
TextLabel_3.Font = Enum.Font.Cartoon
TextLabel_3.Text = "BBS AUTO FARM V1"
TextLabel_3.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_3.TextScaled = true
TextLabel_3.TextSize = 14.000
TextLabel_3.TextWrapped = true

TextLabel_4.Parent = TextLabel_3
TextLabel_4.AnchorPoint = Vector2.new(0.5, 0.5)
TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_4.BackgroundTransparency = 1.000
TextLabel_4.Position = UDim2.new(0.5, -1, 0.5, -1)
TextLabel_4.Size = UDim2.new(1, 0, 1, 0)
TextLabel_4.Font = Enum.Font.Cartoon
TextLabel_4.Text = "BBS AUTO FARM V1"
TextLabel_4.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_4.TextScaled = true
TextLabel_4.TextSize = 14.000
TextLabel_4.TextWrapped = true

local plr = game.Players.LocalPlayer
local BrainFull = plr.PlayerGui:WaitForChild("MainGui"):WaitForChild("BrainFullWindow")

local PlayerModule = require(plr.PlayerScripts:WaitForChild("PlayerModule"))

local Controls = PlayerModule:GetControls()

local blur = game.Lighting:FindFirstChildOfClass("BlurEffect")

plr.Gamepasses.DoubleJump.Value = true

-- Scripts:

local function showFull(yn)
	blur.Enabled = yn
	BrainFull.Visible = yn
end

local function CHQVDB_fake_script() -- Frame.LocalScript 
	local script = Instance.new('LocalScript', Frame)

	local UDim2_new = UDim2.new

	local UserInputService = game:GetService("UserInputService")

	local DraggableObject 		= {}
	DraggableObject.__index 	= DraggableObject

	-- Sets up a new draggable object
	function DraggableObject.new(Object)
		local self 			= {}
		self.Object			= Object
		self.DragStarted	= nil
		self.DragEnded		= nil
		self.Dragged		= nil
		self.Dragging		= false

		setmetatable(self, DraggableObject)

		return self
	end

	-- Enables dragging
	function DraggableObject:Enable()
		local object			= self.Object
		local dragInput			= nil
		local dragStart			= nil
		local startPos			= nil
		local preparingToDrag	= false

		-- Updates the element
		local function update(input)
			local delta 		= input.Position - dragStart
			local newPosition	= UDim2_new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
			object.Position 	= newPosition

			return newPosition
		end

		self.InputBegan = object.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				preparingToDrag = true
				--[[if self.DragStarted then
					self.DragStarted()
				end
				
				dragging	 	= true
				dragStart 		= input.Position
				startPos 		= Element.Position
				--]]

				local connection 
				connection = input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End and (self.Dragging or preparingToDrag) then
						self.Dragging = false
						connection:Disconnect()

						if self.DragEnded and not preparingToDrag then
							self.DragEnded()
						end

						preparingToDrag = false
					end
				end)
			end
		end)

		self.InputChanged = object.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				dragInput = input
			end
		end)

		self.InputChanged2 = UserInputService.InputChanged:Connect(function(input)
			if object.Parent == nil then
				self:Disable()
				return
			end

			if preparingToDrag then
				preparingToDrag = false

				if self.DragStarted then
					self.DragStarted()
				end

				self.Dragging	= true
				dragStart 		= input.Position
				startPos 		= object.Position
			end

			if input == dragInput and self.Dragging then
				local newPosition = update(input)

				if self.Dragged then
					self.Dragged(newPosition)
				end
			end
		end)
	end

	local frame = script.Parent

	DraggableObject.new(frame):Enable()
end

local function getChar()
	return plr.Character
end

local toggle = false

local walkToPoint = Vector3.new(-76,2,-70.5)
local sellPoint = CFrame.new(-80.871048, 2.01867867, -84.1585388)

button.Activated:connect(function()
	showFull(toggle)
	toggle = not toggle
	if toggle then
		Controls:Disable()
		on.Visible = true
		off.Visible = false
		local char = plr.Character or plr.CharacterAdded:wait()
		char.PrimaryPart.CFrame = sellPoint
	else	
		Controls:Enable()
		on.Visible = false
		off.Visible = true
	end
end)

local BookClicked = game:GetService("ReplicatedStorage").Remotes.BookClicked
local Settings = plr.Settings
local BrainCapacity = Settings.BrainCapacity
local EquippedBook = Settings.EquippedBook
local IQ = plr.leaderstats.IQ

local function isFull()
	return BrainCapacity.Value == IQ.Value
end

game:GetService("RunService").RenderStepped:Connect(function()
	local char = getChar()
	if not toggle or not char then return end
	local CurrentBook = plr.Backpack:GetChildren()[1]
	if CurrentBook then
		char.Humanoid:EquipTool(CurrentBook)
	end
	BookClicked:FireServer(EquippedBook.Value)
	if isFull() then
		char.PrimaryPart.CFrame = sellPoint
	end
	char.Humanoid:MoveTo(walkToPoint)
end)

coroutine.wrap(CHQVDB_fake_script)()

print("AutoFarm gui initialized")
